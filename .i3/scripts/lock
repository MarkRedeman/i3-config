#!/bin/sh

set -e
__lock() {
    # Inspired from https://github.com/FloorLamp/git-whatthecommit/blob/master/prepare-commit-msg
    # First we grab a list of commit messages (we could possible cache this..) randomly select one of said list
    _whatthecommit(){
        http GET https://raw.githubusercontent.com/ngerakines/commitment/master/commit_messages.txt \
            | sort -R \
            | head -n 1
    }

    # Create a temporary file that will be deleted when this script has finished executing
    readonly lock_screen=$(mktemp --tmpdir XXXX.png)
    scrot "$lock_screen"

    # Gets the (width, height) of the screen.
    # xdpyinfo  | grep dimensions
    readonly _active_screen="$(xrandr -q | grep '\*' | uniq)"
    readonly __screen_x=$(echo $_active_screen | awk '{print $1}' | cut -d 'x' -f1)
    readonly __screen_y=$(echo $_active_screen | awk '{print $1}' | cut -d 'x' -f2)

    # Calculate the amount of pixelated blocks to show
    # Calculate the "reduced" height and width for the down-scaling.
    readonly __block_size=20
    readonly __reduced_x=$(echo "$__screen_x / $__block_size" | bc -q)
    readonly __reduced_y=$(echo "$__screen_y / $__block_size" | bc -q)

    readonly __message="$(_whatthecommit)"
    readonly __icon="$HOME/.i3/assets/lock-icon.png"

    # (generate the image without temporary files to not
    # clutter the filesystem). Since `convert -scale` doesn't do blurring, scaling
    # down and then back up is an efficient method of producing a pixelated image.
    convert "$lock_screen" \
            -scale "${__reduced_x}x${__reduced_y}" \
            -scale "${__screen_x}x${__screen_y}" \
            "${__icon}" \
            -gravity center \
            -geometry +0-50 \
            -composite \
            -matte \
            -gamma 1.0,1.3,1.0 \
            -gravity center \
            -pointsize 50 \
            -fill "#2ebd59" \
            -draw "text 0,300 \"${__message}\"" \
            "$lock_screen"

    i3lock "$@" -u -i "$lock_screen"
    rm "$lock_screen"
}

__lock "$@"
